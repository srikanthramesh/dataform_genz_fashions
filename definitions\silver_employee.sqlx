config {
  type: "incremental",
  schema: "silver",
  name: "employee",
  tags: "hourly",
  disabled: false,
  description: "Stores employee info",
  uniqueKey: ["id", "sys_eff_from_ts"]
}



with source_cte as (
  with base as (
    SELECT
      `ID` as id,`Name` as name,`Age` as age,`Height` as height,`Is_Student` as isStudent,FORMAT_DATE('%Y-%m-%d', joinDate) as joinDate,`Score` as score,`favColour` as favcolour,FORMAT_TIMESTAMP('%Y-%m-%d %H:%M:%S', updateAt) as updatedat
       
    FROM bronze.employee
    WHERE updatedAt >= watermarkTs
  )
  
  SELECT 
    id,
    name, age, height, isStudent, joinDate, score, favcolour, updatedat,
    createdAt, 
    updatedAt, 
    TIMESTAMP_TRUNC(updatedAt,second) as sys_eff_from_ts,
    current_timestamp() as sys_insert_ts,
    current_timestamp() as sys_update_ts,
    SHA256(array_to_string([name, age, height, isStudent, joinDate, score, favcolour, updatedat], '','')) tmp_hash_diff
  

), 

target_cte as (
  select 
    id,
    name, age, height, isStudent, joinDate, score, favcolour, updatedat
    attributes,
    createdAt, 
    updatedAt,  
    sys_eff_from_ts,
    sys_insert_ts,
    current_timestamp() as sys_update_ts,
    sha256(array_to_string([name, age, height, isStudent, joinDate, score, favcolour, updatedat], '','') tmp_hash_diff
  from ${self()} 
  where sys_current_flag = true
),

join_cte as (
  select 
    s.*, 
    -- Mark this row from source
    false as tmp_target_row_flag 
  from source_cte as s
  left join target_cte as t using (id)
  -- Ignore late arrival
  where s.sys_eff_from_ts > coalesce(t.sys_eff_from_ts, '2000-01-01 00:00:00')

  union all 

  select 
    t.*, 
    -- Mark this row from target
    true as tmp_target_row_flag 
  from target_cte t
  where exists (
    select * 
    from source_cte as s 
    -- Get matching records from target to compare
    where s.id=t.id
  )
),

cleaned_cte as (
  select * 
  from join_cte
  qualify 
    -- Keep the current record from target
    -- or keep records from source that have different attributes
    tmp_target_row_flag
    --ignore rows when no changes 
    tmp_hash_diff != lag(tmp_hash_diff) over (partition by id order by sys_eff_from_ts)
    
    ) */
),

calc_cte as (
  select 
    *,
    coalesce(
      timestamp_sub(
        lead(sys_eff_from_ts) over (
          partition by id
          order by sys_eff_from_ts
        ), 
        interval 1 SECOND
      ),
      '2099-12-31 23:59:59'
    ) as sys_eff_to_ts,
    if(
      row_number() over (
        partition by id
        order by sys_eff_from_ts desc
      ) = 1,
      true,
      false
    ) as sys_current_flag
  from cleaned_cte
)

select * except (tmp_target_row_flag, tmp_hash_diff) 
from calc_cte
-- If there is no new change, means that the record is from target and it's the current one,
-- we don't want to update this record in target table
where NOT (tmp_target_row_flag and sys_eff_to_ts = '2099-12-31 23:59:59')


pre_operations {
CREATE TABLE IF NOT EXISTS {self()}
(
  id,
  name, age, height, isStudent, joinDate, score, favcolour, updatedat, 
  sys_eff_from_ts timestamp,
  sys_eff_to_ts timestamp,
  sys_current_flag boolean,
  sys_insert_ts timestamp,
  sys_update_ts timestamp
)
OPTIONS(
    description="Stores employee info"
);

DECLARE watermarkTs DEFAULT (
        ${WHEN(incremental(),
        `select coalesce(max(sys_eff_from_ts), timestamp('2001-01-01')) from ${self()}`,
        `select timestamp('2001-01-01')`)}
    );    

}